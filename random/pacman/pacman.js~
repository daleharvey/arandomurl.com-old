Pacman = function(canvas) 
{
    this.ctx = canvas.getContext('2d');

    this.map = new Pacman.Map(canvas);
    this.map.draw(this.ctx);
    this.user = new Pacman.User(this.map);

    this.timer = null;
};

Pacman.NONE = 4;
Pacman.UP = 3;
Pacman.LEFT = 2;
Pacman.DOWN = 1;
Pacman.RIGHT = 0;

Pacman.prototype.start = function() 
{
    var that = this;
    this.timer = setInterval(function() { that.main()}, 150);
};

Pacman.prototype.main = function() 
{
    this.user.move(this.ctx);
    //    console.log("in game loop");
};

Pacman.User = function(map) 
{
    this.map = map;
    this.position = {x:9, y:12};
    this.direction = Pacman.LEFT;
    this.due = Pacman.LEFT;
 
    var that = this;
   
	var fncKeyDown = function (e) {
		var keyCode = (e||event).keyCode;
		
		switch ( keyCode ) {
		case 39: that.due = Pacman.RIGHT; return false;
		case 38: that.due = Pacman.UP;    return false;
		case 37: that.due = Pacman.LEFT;  return false;
		case 40: that.due = Pacman.DOWN;  return false;
		}
	};			
    
	document.onkeydown = fncKeyDown;
};

Pacman.User.get_new_coord = function(dir, current) 
{
    var nx = dir == Pacman.LEFT && -1 || dir == Pacman.RIGHT && 1 || 0;
    var ny = dir == Pacman.DOWN && 1 || dir == Pacman.UP    && -1 || 0;
    
    return { x: current.x + nx, y: current.y + ny };  
};

Pacman.User.prototype.move = function(ctx) 
{
    var npos = null;

    if( this.due != this.direction ) {
        npos = Pacman.User.get_new_coord(this.due, this.position);
        if( typeof Pacman.Map.layout[npos.y][npos.x] != "number" ) {
            this.direction = this.due;
        } else {
            npos = null;
        }
    }

    if( npos == null ) {
        npos = Pacman.User.get_new_coord(this.direction, this.position);
    }
    
    if( typeof Pacman.Map.layout[npos.y][npos.x] == "number" ) {
        this.direction = Pacman.NONE;
    }

    if( this.direction == Pacman.NONE ) {
        return;
    }

    this.map.draw_block(this.position.y, this.position.x, ctx);

    if( npos.y == 10 && npos.x >= 19 && this.direction == Pacman.RIGHT ) {
        this.position = {y:10, x:-1};
        return;
    }

    if( npos.y == 10 && npos.x <= -1 && this.direction == Pacman.LEFT ) {
        this.position = {y:10, x:19};
        return;
    }
    
    this.position = npos;
    
    ctx.fillStyle = "#FFFF00";
	ctx.fillRect((this.position.x * this.map.blockSize), 
                 (this.position.y * this.map.blockSize), 
                 this.map.blockSize, this.map.blockSize);
    
    Pacman.Map.layout[this.position.y][this.position.x] = "B";
};

Pacman.Map = function(canvas)
{
    this.blockSize = Math.floor(Math.min( canvas.offsetHeight / 22, 
                                          canvas.offsetWidth / 22));
    this.height = Pacman.Map.layout.length;
    this.width  = Pacman.Map.layout[0].length;
};

Pacman.Map.layout = [[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],
					 [5,"A","A","A","A","A","A","A","A",5,
                      "A","A","A","A","A","A","A","A",5],
					 [5,"A",5,5,"A",5,5,5,"A",5,"A",5,5,5,"A",5,5,"A",5],
					 [5,"A",5,5,"A",5,5,5,"A",5,"A",5,5,5,"A",5,5,"A",5],
					 [5,"A","A","A","A","A","A","A","A",
                      "A","A","A","A","A","A","A","A","A",5],
					 [5,"A",5,5,"A",5,"A",5,5,5,5,5,"A",5,"A",5,5,"A",5],
					 [5,"A","A","A","A",5,"A","A","A",5,"A","A",
                      "A",5,"A","A","A","A",5],
					 [5,5,5,5,"A",5,5,5,"A",5,"A",5,5,5,"A",5,5,5,5],
					 ["B","B","B",5,"A",5,"A","A","A","A","A",
                      "A","A",5,"A",5,"B","B","B"],
					 [5,5,5,5,"A",5,"A",5,5,7,5,5,"A",5,"A",5,5,5,5],
					 ["B","B","B","B","A","A","A",5,0,0,0,5,"A","A",
                      "A","B","B","B","B"],
					 [5,5,5,5,"A",5,"A",5,5,5,5,5,"A",5,"A",5,5,5,5],
					 ["B","B","B",5,"A",5,"A","A","A","A","A","A",
                      "A",5,"A",5,"B","B","B"],
					 [5,5,5,5,"A",5,"A",5,5,5,5,5,"A",5,"A",5,5,5,5],
					 [5,"A","A","A","A","A","A","A","A",5,"A","A",
                      "A","A","A","A","A","A",5],
					 [5,"A",5,5,"A",5,5,5,"A",5,"A",5,5,5,"A",5,5,"A",5],
					 [5,"A","A",5,"A","A","A","A","A","A","A","A",
                      "A","A","A",5,"A","A",5],
					 [5,5,"A",5,"A",5,"A",5,5,5,5,5,"A",5,"A",5,"A",5,5],
					 [5,"A","A","A","A",5,"A","A","A",5,"A","A",
                      "A",5,"A","A","A","A",5],
					 [5,"A",5,5,5,5,5,5,"A",5,"A",5,5,5,5,5,5,"A",5],
					 [5,"A","A","A","A","A","A","A","A","A","A","A",
                      "A","A","A","A","A","A",5],
					 [5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]];

Pacman.Map.prototype.draw = function(ctx) 
{    
    for (var i = 0; i < this.height; i++) {
		for (var j = 0; j < this.width; j++) {
			this.draw_block(i, j, ctx);
		}
	}
};

Pacman.Map.prototype.draw_block = function(y, x, ctx)
{
    var layout = Pacman.Map.layout[y][x], size = this.blockSize;

	if( layout == 5 ) {
        ctx.fillStyle = "#FFF";
		ctx.fillRect((x * size), (y * size), size, size);
	}
    
    else if( layout == "B" ) {
        ctx.fillStyle = "#000";
		ctx.fillRect((x * size), (y * size), size, size);
	}
    
    
	else if( layout == "A" ) {

        ctx.fillStyle = "#000";
		ctx.fillRect((x * size), (y * size), size, size);

        ctx.fillStyle = "#FFF";
		ctx.fillRect((x * size) + (size / 2.5), 
                     (y * size) + (size / 2.5), 
                     size / 6, size / 6);
	}
};

var pacman = new Pacman(document.getElementById("pacman"));
pacman.start();

console.log("helloooo");

